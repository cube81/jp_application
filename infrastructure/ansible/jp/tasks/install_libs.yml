---
# - name: Update apt-get repo and cache
#   apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
#   become: true

#- name: Upgrade all packages on servers
#  apt: upgrade=dist force_apt_get=yes
#  become: true


# - name: Waiting for previous processes are finished
#   pause:
#     minutes: 1

# - name: Correction of dmg dpgk
#   become: true
#   become_method: sudo
#   command: "dpkg --configure -a"
    
# - name: Install tzdata
#   become: true
#   become_method: sudo
#   command: "apt-get -y install tzdata"

# - name: Waiting for previous processes are finished 2
#   pause:
#     minutes: 1

#   #/var/lib/apt/lists/lock
# - name: packages | ensure apt list dir exists
#   file:
#     path: /var/lib/apt/lists/
#     state: directory
#     mode: 0755

# - name: Update apt list
#   apt:
#     update_cache: yes
#   become: true

# - name: Waiting for previous processes are finished 3
#   pause:
#     minutes: 1

# - name: Correction of dmg dpgk 3
#   become: true
#   become_method: sudo
#   command: "dpkg --configure -a"

# - name: Update apt list 3
#   apt:
#     update_cache: yes
#   become: true

# - name: packages | ensure apt list dir exists 3
#   file:
#     path: /var/lib/apt/lists/
#     state: directory
#     mode: 0755

# - name: Removal of shitty locks
#   become: true
#   become_method: sudo
#   command: "sudo rm -f /var/lib/apt/lists/lock"

- name: wait until apt lock is released
  shell: lsof -w /var/lib/apt/lists/lock | wc -l
  register: lock
  until: lock.stdout == "0"
  retries: 20
  delay: 20

- name: wait until apt lock_frontend is released
  shell: lsof -w /var/lib/dpkg/lock-frontend | wc -l
  register: lock_frontend
  until: lock_frontend.stdout == "0"
  retries: 20
  delay: 20

- name: Correction of dmg dpgk 3
  become: true
  become_method: sudo
  command: "dpkg --configure -a"

- name: Install python apt
  become: true
  become_method: sudo
  apt:
    pkg:
      - python3-apt
  connection: local

- name: Install python pip
  become: true
  become_method: sudo
  apt:
    pkg:
      - python3-pip
      - python3-dev
  #    - python3-apt
  connection: local
  register: apt_action
  retries: 100
  delay: 20
  until: apt_action is success
  # or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)


- name: Install Python Libs
  become: true
  become_method: sudo
  apt:
    pkg:
      - libxml2
      - libxml2-dev
      - libxslt1-dev
      - lib32z1-dev
      - libssl-dev
      - zlib1g-dev
  connection: local
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Install fucking lxml
  become: true
  become_method: sudo
  command: "pip3 install lxml"
  environment:
    CFLAGS: "-O0"
  connection: local
  

- name: Download app from Artifactory
  maven_artifact:
    group_id: pl.jp
    artifact_id: jpapp
    repository_url: "{{ repository_url }}"
    username: "{{ username }}"
    password: "{{ password }}"
    dest: "{{ artifact_name }}"
  connection: local
